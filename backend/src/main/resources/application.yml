spring:
  application:
    name: kurum
  profiles:
    group:
      local: port-local, oauth
      dev: port-prod, oauth
    active: local

  # Thymeleaf 설정 추가
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false
    encoding: UTF-8
    mode: HTML
    enabled: true

  # 메일 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 1000
          starttls:
            enable: true

  # 보안 OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: email, profile
          naver:
            client-id: UdHFWtLY6862NNPmP8Jz
            client-secret: ui9Uu0Wr2n
            redirect-uri: http://localhost:9000/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-name: naver
            scope: name, email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: id

# 챗봇 설정
openai:
  model: gpt-3.5-turbo
  api:
    key: ${openai.key}
    url: ${openai.url}

# JWT 설정
secret:
  jwt-secret-key: ${jwt-secret-key}
  accessToken-valid-time: 1800000 # 1시간
  refreshToken-valid-time: 604800000 # 일주일

# elastic search 설정
  elasticsearch:
    host: localhost:9200

---

# 로컬 환경 설정 (포트 및 데이터베이스 설정)
spring:
  config:
    activate:
      on-profile: local

  # MySQL 데이터베이스 연결 설정
  datasource:
    url: jdbc:mysql://localhost:3307/mydb
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root  # MySQL 사용자 이름
    password: 1234  # MySQL 비밀번호

  # ddl 전략
  jpa:
    hibernate:
      ddl-auto: update # 로컬 환경에서만 테이블을 생성하도록 설정
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  # redis 연결 설정
  data:
    redis:
      port: 6379
      host: localhost

---

# 배포 환경 설정 (외부 데이터베이스 및 ddl 전략 설정)
spring:
  config:
    activate:
      on-profile: prod

  # ddl 전략 (프로덕션 환경에서는 ddl-auto를 none으로 설정)
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.MySQLDialect
      ddl-auto: none # 프로덕션에서는 스키마 자동 생성 안 함
    show-sql: true

  # 외부 데이터베이스 설정
  datasource:
    url: ${DB.URL}
    username: ${DB.USERNAME}
    password: ${DB.PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # Redis 설정
  data:
    redis:
      host: localhost
      port: 6379

# 로깅 전략
logging:
  level:
    org.springframework.cache: trace

---

# 로컬 포트 설정
spring:
  config:
    activate:
      on-profile: port-local

server:
  port: 9000

---

# 배포용 포트 설정
spring:
  config:
    activate:
      on-profile: port-prod

server:
  port: 9000
