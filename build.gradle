// 1. Import 추가
import com.sun.security.ntlm.Server
import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
	ext {
		restdocsApiSpecVersion = '0.17.1' // restdocsApiSpecVersion 버전 변수 설정
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	// epages-restdocs 플러그인 추가
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
	//swagger generator 플러그인 추가
	id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'ku-rum'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// 5. 생성된 API 스펙이 어느 위치에 있는지 지정
swaggerSources {
	sample {
		setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
	}
}

// 6. openapi3 스펙 생성시 설정 정보
openapi3 {
	servers = [
			{ url = "http://localhost:8080" }
	]
	title = "API 문서"
	description = "RestDocsWithSwagger Docs"
	version = "0.0.1"
	format = "yaml"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'com.mysql:mysql-connector-j'
  
	// Mail Service
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'
	implementation 'org.seleniumhq.selenium:selenium-java:4.12.1'
	implementation 'io.github.bonigarcia:webdrivermanager:5.7.0'

	// Selenium Java
	implementation 'org.seleniumhq.selenium:selenium-java:4.12.1'

	// WebDriver Manager
	implementation 'io.github.bonigarcia:webdrivermanager:5.7.0'
	implementation 'org.jsoup:jsoup:1.15.3'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// OAUTH
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JSOUP
	implementation 'org.jsoup:jsoup:1.17.2'

	// Spring REST Docs 의존성
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	// 8. openAPI3 추가
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
	// 9. SwaggerUI 추가
	swaggerUI 'org.webjars:swagger-ui:4.11.1'
}


tasks.named('test') {
	useJUnitPlatform()
}

// 10. openapi3가 먼저 실행 - doFrist를 통한 Header 설정 (글에서 자세하게 설명)
tasks.withType(GenerateSwaggerUI) {
	dependsOn 'openapi3'
	doFirst {
		def swaggerUIFile = file("${openapi3.outputDirectory}/openapi3.yaml")

		def securitySchemesContent =  "  securitySchemes:\n" +  \
                                      "    APIKey:\n" +  \
                                      "      type: apiKey\n" +  \
                                      "      name: Authorization\n" +  \
                                      "      in: header\n" + \
                                      "security:\n" +
				"  - APIKey: []  # Apply the security scheme here"

		swaggerUIFile.append securitySchemesContent
	}
}

def querydslSrcDir = 'src/main/generated'

clean {
	delete file(querydslSrcDir)
}

// 11. 생성된 openapi3 스펙을 기반으로 SwaggerUISample 생성 및 static/docs 패키지에 복사
bootJar {
	dependsOn generateSwaggerUISample
	from("${generateSwaggerUISample.outputDir}") {
		into 'static/docs'
	}
}